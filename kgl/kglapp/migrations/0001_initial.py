# Generated by Django 5.2 on 2025-04-22 18:18

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_names', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(blank=True, max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to=None)),
                ('sku', models.CharField(blank=True, max_length=255)),
                ('buying_price', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('unit_price', models.IntegerField(blank=True, default=0, null=True)),
                ('description', models.TextField()),
                ('expiry_date', models.DateField()),
                ('product_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='kglapp.category')),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=50, null=True)),
                ('contact', models.IntegerField(blank=True, default=0, null=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('product_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='kglapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('stock_cost', models.IntegerField(blank=True, default=0, null=True)),
                ('supplier_name', models.CharField(blank=True, max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('type_of_stock', models.CharField(blank=True, max_length=100)),
                ('unite_price', models.IntegerField(blank=True, default=0, null=True)),
                ('unit_cost', models.IntegerField(blank=True, default=0, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kglapp.branch')),
                ('product_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='kglapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='Userprofile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_salesagent', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_owner', models.BooleanField(default=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('phonenumber', models.CharField(max_length=20)),
                ('gender', models.CharField(blank=True, max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='userprofile_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='userprofile_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Creditsale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.IntegerField(blank=True, default=0, null=True)),
                ('total_price', models.IntegerField(blank=True, default=0, null=True)),
                ('amount_paid', models.IntegerField(blank=True, default=0, null=True)),
                ('balance_due', models.IntegerField(blank=True, default=0, null=True)),
                ('date_of_sale', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending '), ('Patial', 'Patial payment'), ('Paid', 'Fully paid'), ('Overdue', 'Overdue')], default='Pending', max_length=20)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kglapp.branch')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kglapp.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kglapp.product')),
                ('sales_agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kglapp.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, max_length=255, unique=True)),
                ('buying_price', models.IntegerField()),
                ('unit_price', models.IntegerField(blank=True, default=0, null=True)),
                ('unite_of_measure', models.IntegerField(default=0)),
                ('description', models.TextField()),
                ('expiry_date', models.DateField()),
                ('stock_quantity', models.IntegerField(default=0)),
                ('reorder_level', models.PositiveIntegerField(default=10)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kglapp.branch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kglapp.product')),
            ],
            options={
                'unique_together': {('product', 'branch')},
            },
        ),
    ]
